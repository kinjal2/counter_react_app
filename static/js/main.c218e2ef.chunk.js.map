{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","index.js"],"names":["NavBar","props","className","href","totalCounters","Counter","style","fontSize","this","getBadgeclasses","formatCount","onClick","onIncrement","counter","onDecrement","onDelete","id","value","classes","Component","Counters","onReset","counters","map","App","state","handleIncrement","index","indexOf","setState","handleDecrement","handleDelete","counterId","filter","c","handleReset","console","log","Fragment","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c218e2ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n//stateless functional component\r\nconst NavBar = (props) => {\r\n  \r\n    return ( <nav className=\"navbar navbar-light bg-light\">\r\n    <a className=\"navbar-brand\" href=\"#\">Navbar\r\n    <span className=\"badge badge-pill badge-secondray\">{props.totalCounters}</span>\r\n    \r\n    \r\n    </a>\r\n  </nav> );\r\n\r\n\r\n}\r\n\r\n \r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider';\r\n\r\nclass Counter extends Component {\r\n  \r\n  \r\n   render() { \r\n    \r\n        return (\r\n            <div>\r\n                <span  style={{fontSize: 30}} className={this.getBadgeclasses()}>{ this.formatCount()}</span>\r\n                <button onClick={() => this.props.onIncrement(this.props.counter)}  className=\"btn btn-secondary  btn-sm m-2\">+</button>\r\n                <button onClick={() => this.props.onDecrement(this.props.counter)}  className=\"btn btn-secondary  btn-sm m-2\">-</button>\r\n                <button onClick={() => this.props.onDelete(this.props.counter.id) }   className=\"btn btn-danger  btn-sm\">Delete</button>\r\n              \r\n                \r\n            </div>\r\n         \r\n        );\r\n    }\r\n    formatCount()\r\n    {\r\n        const { value } = this.props.counter;\r\n        return value === 0 ?\"Zero\":value;\r\n    } \r\n    getBadgeclasses()\r\n    {\r\n        let classes='badge m-2 badge-';\r\n        classes+= this.props.counter.value === 0 ?'warning':'primary';\r\n        return classes;\r\n    }\r\n}\r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n    \r\n     render() { \r\n        const { onReset,onDelete,counters,onIncrement,onDecrement}=this.props;\r\n        return (<div>\r\n            <button \r\n            onClick={onReset}\r\n            className=\"btn btn-primary btn-sm m-2\">Reset </button>\r\n           { counters.map(counter => \r\n           <Counter key={counter.id} onDelete={onDelete} onIncrement={onIncrement} onDecrement={onDecrement} counter={counter} />)}\r\n        \r\n          \r\n          \r\n          </div>  );\r\n    }\r\n}\r\n \r\nexport default Counters;\r\n","\nimport React, { Component } from 'react';\nimport NavBar from './components/navbar'\nimport Counters from './components/counters';\nimport './App.css';\n\n\nclass App extends Component {\n  state = { \n    counters:[\n        { id:1,value:4},\n        { id:2,value:2},\n        { id:3,value:0},\n        { id:4,value:0}\n    ]\n  \n  };\n  constructor(props){\n    super(props);\n    console.log(\"App -Constructor\",this.props)\n  }\n  handleIncrement = counter => {\n     \n    const counters =[...this.state.counters];\n    const index = counters.indexOf(counter);\n  \n    counters[index]={...counter};\n    counters[index].value++;\n    this.setState({ counters });\n  };\n  \n  handleDecrement = counter => {\n     \n    const counters =[...this.state.counters];\n    const index = counters.indexOf(counter);\n   counters[index]={...counter};\n   if(counters[index].value!=0){\n   counters[index].value--;\n   }\n   else{\n    counters[index].value=0;\n   }\n   \n   \n    \n    this.setState({ counters });\n  };\n  handleDelete = counterId => {\n  \n  const counters = this.state.counters.filter(c=>c.id !==counterId);\n  this.setState({counters:counters});\n  } \n  handleReset = () =>\n  {\n    const counters=this.state.counters.map(c=>{\n        c.value=0;\n        return c;\n    });\n    this.setState({counters});\n  \n  }\n  \n  render() { \n\n  return (\n    <React.Fragment>\n    <NavBar totalCounters={this.state.counters.filter(c => c.value > 0).length} />\n   <main className=\"container\">\n   <Counters\n   counters={this.state.counters}\n   onReset={this.handleReset}\n   onIncrement={this.handleIncrement}\n   onDelete={this.handleDelete}\n   onDecrement={this.handleDecrement}\n   />\n   </main>\n   </React.Fragment>\n  );\n}\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport  Counters from './components/counters';\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}