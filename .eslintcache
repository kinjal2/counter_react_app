[{"G:\\counter-app\\src\\index.js":"1","G:\\counter-app\\src\\App.js":"2","G:\\counter-app\\src\\reportWebVitals.js":"3","G:\\counter-app\\src\\components\\counter.jsx":"4","G:\\counter-app\\src\\components\\counters.jsx":"5","G:\\counter-app\\src\\components\\navbar.jsx":"6"},{"size":306,"mtime":1610450947904,"results":"7","hashOfConfig":"8"},{"size":1695,"mtime":1610534630425,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1149,"mtime":1610533626833,"results":"11","hashOfConfig":"8"},{"size":630,"mtime":1610533773839,"results":"12","hashOfConfig":"8"},{"size":376,"mtime":1610531557362,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1slwuie",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},"G:\\counter-app\\src\\index.js",["31","32"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport  Counters from './components/counters';\nReactDOM.render(<App />,document.getElementById('root'));\n",["33","34"],"G:\\counter-app\\src\\App.js",["35"],"\nimport React, { Component } from 'react';\nimport NavBar from './components/navbar'\nimport Counters from './components/counters';\nimport './App.css';\n\n\nclass App extends Component {\n  state = { \n    counters:[\n        { id:1,value:4},\n        { id:2,value:2},\n        { id:3,value:0},\n        { id:4,value:0}\n    ]\n  \n  };\n  constructor(props){\n    super(props);\n    console.log(\"App -Constructor\",this.props)\n  }\n  handleIncrement = counter => {\n     \n    const counters =[...this.state.counters];\n    const index = counters.indexOf(counter);\n  \n    counters[index]={...counter};\n    counters[index].value++;\n    this.setState({ counters });\n  };\n  \n  handleDecrement = counter => {\n     \n    const counters =[...this.state.counters];\n    const index = counters.indexOf(counter);\n   counters[index]={...counter};\n   if(counters[index].value!=0){\n   counters[index].value--;\n   }\n   else{\n    counters[index].value=0;\n   }\n   \n   \n    \n    this.setState({ counters });\n  };\n  handleDelete = counterId => {\n  \n  const counters = this.state.counters.filter(c=>c.id !==counterId);\n  this.setState({counters:counters});\n  } \n  handleReset = () =>\n  {\n    const counters=this.state.counters.map(c=>{\n        c.value=0;\n        return c;\n    });\n    this.setState({counters});\n  \n  }\n  \n  render() { \n\n  return (\n    <React.Fragment>\n    <NavBar totalCounters={this.state.counters.filter(c => c.value > 0).length} />\n   <main className=\"container\">\n   <Counters\n   counters={this.state.counters}\n   onReset={this.handleReset}\n   onIncrement={this.handleIncrement}\n   onDelete={this.handleDelete}\n   onDecrement={this.handleDecrement}\n   />\n   </main>\n   </React.Fragment>\n  );\n}\n}\nexport default App;\n","G:\\counter-app\\src\\reportWebVitals.js",[],"G:\\counter-app\\src\\components\\counter.jsx",["36"],"import React, { Component } from 'react';\r\nimport { ThemeConsumer } from 'react-bootstrap/esm/ThemeProvider';\r\n\r\nclass Counter extends Component {\r\n  \r\n  \r\n   render() { \r\n    \r\n        return (\r\n            <div>\r\n                <span  style={{fontSize: 30}} className={this.getBadgeclasses()}>{ this.formatCount()}</span>\r\n                <button onClick={() => this.props.onIncrement(this.props.counter)}  className=\"btn btn-secondary  btn-sm m-2\">+</button>\r\n                <button onClick={() => this.props.onDecrement(this.props.counter)}  className=\"btn btn-secondary  btn-sm m-2\">-</button>\r\n                <button onClick={() => this.props.onDelete(this.props.counter.id) }   className=\"btn btn-danger  btn-sm\">Delete</button>\r\n              \r\n                \r\n            </div>\r\n         \r\n        );\r\n    }\r\n    formatCount()\r\n    {\r\n        const { value } = this.props.counter;\r\n        return value === 0 ?\"Zero\":value;\r\n    } \r\n    getBadgeclasses()\r\n    {\r\n        let classes='badge m-2 badge-';\r\n        classes+= this.props.counter.value === 0 ?'warning':'primary';\r\n        return classes;\r\n    }\r\n}\r\nexport default Counter;","G:\\counter-app\\src\\components\\counters.jsx",[],"G:\\counter-app\\src\\components\\navbar.jsx",["37","38"],"import React, { Component } from 'react';\r\n//stateless functional component\r\nconst NavBar = (props) => {\r\n  \r\n    return ( <nav className=\"navbar navbar-light bg-light\">\r\n    <a className=\"navbar-brand\" href=\"#\">Navbar\r\n    <span className=\"badge badge-pill badge-secondray\">{props.totalCounters}</span>\r\n    \r\n    \r\n    </a>\r\n  </nav> );\r\n\r\n\r\n}\r\n\r\n \r\nexport default NavBar;\r\n",{"ruleId":"39","severity":1,"message":"40","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":23},{"ruleId":"39","severity":1,"message":"43","line":8,"column":9,"nodeType":"41","messageId":"42","endLine":8,"endColumn":17},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":37,"column":28,"nodeType":"50","messageId":"51","endLine":37,"endColumn":30},{"ruleId":"39","severity":1,"message":"52","line":2,"column":10,"nodeType":"41","messageId":"42","endLine":2,"endColumn":23},{"ruleId":"39","severity":1,"message":"53","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"54","severity":1,"message":"55","line":6,"column":5,"nodeType":"56","endLine":6,"endColumn":42},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'Counters' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ThemeConsumer' is defined but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]